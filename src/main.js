'number' + 23 + 32
// Результат: "number2332"
// 1. 'number' є рядком. При використанні оператора `+` з числом (23), число перетворюється на рядок: 'number' + '23' = 'number23'.
// 2. Додається 32, яке також перетворюється на рядок: 'number23' + '32' = 'number2332'.

41 + 1 + 'number'
// Результат: "42number"
// 1. Числа 41 і 1 складаються: 41 + 1 = 42.
// 2. Оскільки 'number' є рядком, 42 конвертується в рядок: '42' + 'number' = '42number'.

null + 1
// Результат: 1
// 1. Значення `null` конвертується в число: null → 0.
// 2. 0 + 1 = 1.

'five' + + 'two'
// Результат: "fiveNaN"
// 1. Унарний плюс (`+`) намагається перетворити 'two' у число, але це нечисловий рядок, тому результат NaN (Not a Number).
// 2. Додаємо NaN до рядка 'five': 'five' + 'NaN' = 'fiveNaN'.

2 && 7
// Результат: 7
// 1. Оператор `&&` повертає останнє істинне значення, якщо обидва операнди істинні.
// 2. 2 та 7 є істинними значеннями, тому повертається останнє — 7.

+'40' + +'2'
// Результат: 42
// 1. Унарний плюс перетворює рядки в числа: +'40' → 40 і +'2' → 2.
// 2. Сума чисел: 40 + 2 = 42.

'10' - 5 === 6
// Результат: true
// 1. Оператор `-` конвертує '10' у число: '10' → 10.
// 2. Різниця: 10 - 5 = 5.
// 3. Порівняння 5 === 6 дає `false`.

true + false
// Результат: 1
// 1. `true` перетворюється на 1, а `false` на 0.
// 2. Сума: 1 + 0 = 1.

'4px' - 3
// Результат: NaN
// 1. Оператор `-` намагається конвертувати '4px' у число, але це неможливо, тому результат NaN.

'4' - 3
// Результат: 1
// 1. Оператор `-` конвертує '4' у число: '4' → 4.
// 2. Різниця: 4 - 3 = 1.

'2' + 3 ** 2
// Результат: "29"
// 1. Оператор `**` виконує піднесення до степеня: 3 ** 2 = 9.
// 2. Оператор `+` додає число до рядка, перетворюючи число в рядок: '2' + '9' = "29".

12 / '6'
// Результат: 2
// 1. Оператор `/` конвертує '6' у число: '6' → 6.
// 2. Ділення: 12 / 6 = 2.

23 + 42 + 'number'
// Результат: "65number"
// 1. Сума чисел: 23 + 42 = 65.
// 2. Оператор `+` додає число до рядка, перетворюючи число в рядок: '65' + 'number' = "65number".

'10' + (5 === 6)
// Результат: "10false"
// 1. Вираз 5 === 6 повертає `false`.
// 2. Оператор `+` додає рядок '10' до `false`, перетворюючи `false` у рядок: '10' + 'false' = "10false".

'number' + 15 + 3
// Результат: "number153"
// 1. 'number' є рядком. Додавання числа 15 перетворює його на рядок: 'number' + '15' = 'number15'.
// 2. Додавання числа 3 також перетворює його на рядок: 'number15' + '3' = 'number153'.

undefined + 1
// Результат: NaN
// 1. `undefined` не можна конвертувати в число.
// 2. Будь-яка арифметична операція з `undefined` повертає NaN.

'true' == true
// Результат: false
// 1. 'true' — рядок, а `true` — булеве значення.
// 2. При нестрогому порівнянні рядок не конвертується в булеве значення.
// 3. Порівняння повертає false.

false == 'false'
// Результат: false
// 1. `false` — булеве значення, а 'false' — рядок.
// 2. При нестрогому порівнянні рядок не конвертується в булеве значення.
// 3. Порівняння повертає false.

null == ''
// Результат: false
// 1. `null` дорівнює лише `null` або `undefined` при нестрогому порівнянні.
// 2. Тому порівняння повертає false.

3 ** (9 / 3)
// Результат: 27
// 1. 9 / 3 = 3.
// 2. 3 ** 3 = 27 (піднесення до степеня).

!!'false' == !!'true'
// Результат: true
// 1. Обидва рядки, 'false' і 'true', є істинними значеннями (truthy).
// 2. Оператор `!!` конвертує їх у булеве значення `true`.
// 3. Порівняння true == true повертає true.

0 || '0' && 1
// Результат: 1
// 1. `0` є хибним значенням, тому `||` переходить до '0'.
// 2. '0' є істинним значенням. Далі `&&` повертає останнє істинне значення — 1.

1 < 2 < 3
// Результат: true
// 1. Вираз оцінюється зліва направо: 1 < 2 повертає true.
// 2. true конвертується в 1. Далі 1 < 3 повертає true.

'foo' + + +'bar'
// Результат: "fooNaN"
// 1. Унарний плюс намагається конвертувати 'bar' у число, що дає NaN.
// 2. Додаємо NaN до рядка 'foo': 'foo' + 'NaN' = "fooNaN".

3 ** 2 / 3
// Результат: 3
// 1. 3 ** 2 = 9 (піднесення до степеня).
// 2. 9 / 3 = 3.

1 < 2 > 3
// Результат: false
// 1. Вираз оцінюється зліва направо: 1 < 2 повертає true.
// 2. true конвертується в 1. Далі 1 > 3 повертає false.

(+null == false) < 1
// Результат: false
// 1. `+null` конвертує null у 0.
// 2. 0 == false повертає true (нестроге порівняння).
// 3. true конвертується в 1. Далі 1 < 1 повертає false.

false && true || true
// Результат: true
// 1. false && true повертає false (AND потребує обидва істинних значення).
// 2. false || true повертає true (OR потребує хоча б одне істинне значення).

false && (true || true)
// Результат: false
// 1. true || true повертає true.
// 2. false && true повертає false.

(+null == false) < 1 ** 5
// Результат: false
// 1. `+null` конвертує null у 0.
// 2. 0 == false повертає true (нестроге порівняння).
// 3. true конвертується в 1. Далі 1 < 1 ** 5 = 1 < 1 повертає false.
